' Gambas class file

Private rstResultado As Result
Private sFiltro As String = "%"
Private sEstado As String = "%"
Private sAccion As String = Null
Private iRespuesta As Integer
Private sEs_Baja As String = Null


Public Sub btnSalir2_Click()

  Me.Close()
  MenuPrincipal.Show()

End

Public Sub Form_Open()

  'Cargamos la imagen de duplicado en su contenedor
  picDuplicado.Picture = gConst.picDuplicado
  'Iniciamos el formulario con los registros activos
  swbEstado.Value = "T"
  ' Cargamos el ResultSet con los filtros

  CargarGrid()

  ComboRoles()

End

Public Sub ComboRoles()

  cmbRol.Clear()

  rstResultado = cRoles.GetAllRoles()

  rstResultado.MoveFirst

  cmbRol.tag = New Integer[]

  cmbRol.Add("- Todos -")
  cmbRol.tag.add(0)
  Do While rstResultado.Available

    cmbRol.Add(rstResultado!NOMBRE)
    cmbRol.tag.add(rstResultado!ID_ROL)
    rstResultado.MoveNext
  Loop

End

Public Sub txtFiltroUsuarios_KeyRelease()

  sFiltro = txtFiltroUsuarios.Text
  CargarGrid()

End

Public Sub GetRows()

  Dim resultado As String

  resultado = CStr(rstResultado.Count)
  lblRegistros.Text = "Registros: " & resultado

End

Public Sub CargarGrid()

  rstResultado = cUsuarios.GetUsers(sFiltro, sEstado)
  ' obtenemos los registro para pintar el grid
  grvUsuarios = cUsuarios.GetGrid(grvUsuarios, rstResultado)

  GetRows()

End

Public Sub btnAdd_Click()
  ' Informamos la variable global como adición

  sAccion = "add"

  ' se hacen visible los botones de Aceptar y Cancelar acción
  btnAceptar.Visible = True
  btnCancelar.visible = True
  btnAdd.Enabled = False
  txtCodigo.Text = gUtils.GetCodigo("USU")

  ' Creamos un nuevo registro
  cUsuarios.AddUsuario(txtCodigo.Text)

End

Public Sub btnAceptar_Click()

  If Len(Trim(txtNombre.text)) = 0 Or Len(Trim(txtApellido1.text)) = 0 Or Len(Trim(txtApellido2.text)) = 0 Or Len(Trim(txtPass.text)) = 0 Then
    'nombre
    If Len(Trim(txtNombre.text)) = 0 Then
      txtNombre.Background = Color.Red
    Else
      txtNombre.Background = Color.white
    End If
    'apellido1
    If Len(Trim(txtApellido1.text)) = 0 Then
      txtApellido1.Background = Color.Red
    Else
      txtApellido1.Background = Color.white
    End If
    'apellido2
    If Len(Trim(txtApellido2.text)) = 0 Then
      txtApellido2.Background = Color.Red
    Else
      txtApellido2.Background = Color.White
    End If
    'password
    If Len(Trim(txtPass.text)) = 0 Then
      txtPass.Background = Color.Red
    Else
      txtPass.Background = Color.white
    End If

    ' Aviso por pantalla al usuario
    Message.Warning("Debe cumplimentar los datos marcados en rojo")
  Else
    ' Se evalua la acción si es añadir o editar
    Select Case sAccion
      Case "add"

        If Len(Trim(txtPass2.text)) = 0 Then
          txtPass2.Background = Color.Red
          ' Aviso por pantalla al usuario
          Message.Warning("Debe cumplimentar los datos marcados en rojo")
          Return
        Else
          If Not ComprobarPass(txtPass.Text, txtPass2.Text) Then
            txtPass2.Background = Color.Red
            Message.Error("Las contraseñas no coinciden")
            Return
          Else
            txtPass2.Background = Color.white
          End If

        End If

        cUsuarios.EditUsuario(txtCodigo.Text, txtPass.Text, txtNombre.Text, txtApellido1.Text, txtApellido2.Text, cmbRol.Tag[cmbRol.index])
        cLogs.InsOkLog(gEstructuras.getIdUsuario(), gUtils.FechaConFormato(Now), gUtils.HoraConFormato(Now), "Usuarios", "Usuario: " & txtCodigo.text & " añadido al sistema.")
      Case "edit"
        If Len(Trim(txtPass2.text)) = 0 Then
          txtPass2.Background = Color.Red
          ' Aviso por pantalla al usuario
          Message.Warning("Debe cumplimentar los datos marcados en rojo")
          Return
        Else
          If Not ComprobarPass(txtPass.Text, txtPass2.Text) Then
            txtPass2.Background = Color.Red
            Message.Error("Las contraseñas no coinciden")
            Return
          Else
            txtPass2.Background = Color.white

            If ContieneDuplicado() Then
              Return
            End If
          End If



        End If

        cUsuarios.EditUsuario(txtCodigo.Text, txtPass.Text, txtNombre.Text, txtApellido1.Text, txtApellido2.Text, cmbRol.Tag[cmbRol.index])
        cLogs.InsOkLog(gEstructuras.getIdUsuario(), gUtils.FechaConFormato(Now), gUtils.HoraConFormato(Now), "Usuarios", "Usuario: " & txtCodigo.text & " modificado en el sistema.")
      Case "del"
        ' Si=1 | No= 2
        iRespuesta = Message.Question("¿Quiere eliminar el registro?", "Sí", "No")

        If iRespuesta = 1 Then
          'Afirmativo
          'Realizamos la Baja lógica del registro según el identificador
          cUsuarios.DelUsuario(gEstructuras.getIdSeleccion())
          cLogs.InsOkLog(gEstructuras.getIdUsuario, gUtils.FechaConFormato(Now), gUtils.HoraConFormato(Now), "Usuarios", "Usuario: " & txtCodigo.text & " dado de baja en el sistema.")
          CargarGrid()
        Else
          'Negativo
          'Cancelamos la acción a realizar
          btnAceptar.Visible = False
          btnCancelar.Visible = False
          btnLimpiar_Click()

        Endif

    End Select

    btnLimpiar_Click()
    btnAceptar.visible = False
    btnCancelar.visible = False
    btnBorrar.Enabled = False
    btnDuplicar.Enabled = False
    picDuplicado.Visible = False
    'Reiniciamos la variable global de la acción realizada
    sAccion = Null
  End If

  CargarGrid()

End

Public Sub btnLimpiar_Click()
  ' Borrado de los TextBox

  txtCodigo.Text = Null
  txtNombre.Text = Null
  txtApellido1.Text = Null
  txtApellido2.Text = Null
  txtPass.Text = Null
  txtPass2.text = Null
  cmbRol.index = 0

End

Public Sub swbEstado_Click()
  ' Pulsamos el switch button

  If swbEstado.value = "T" Then
    ' Activos
    sEstado = "-"
    CargarGrid()

  Else
    'Todos
    sEstado = "%"
    CargarGrid()
  Endif
  ' limpiamos los campos de entrada
  btnLimpiar_Click()

End

Public Sub txtNombre_LostFocus()

  ActivarLimpiar()

End

Public Sub ActivarLimpiar()
  '

  If Len(txtNombre.text) > 0 And Len(txtApellido1.text) > 0 And Len(txtapellido2.text) > 0 And Len(txtPass.text) > 0 And Len(txtpass2.text) > 0 Then
    btnLimpiar.Enabled = True
  Else
    btnLimpiar.Enabled = False
  Endif

End

Public Sub grvUsuarios_Click()
  ' Guardamos el ID seleccionado

  gEstructuras.setIdSeleccion(grvUsuarios[grvUsuarios.Row, 0].text)
  sAccion = "edit"

  ' Recogemos los datos del item seleccionado para modo edición
  rstResultado = cUsuarios.GetSelectedUser(gEstructuras.getIdSeleccion())

  If rstResultado.Available Then
    rstResultado.MoveFirst

    Do While rstResultado.Available
      txtCodigo.Text = rstResultado!COD_USUARIO
      txtNombre.Text = rstResultado!NOMBRE
      txtPass.Text = rstResultado!PASSWORD
      txtApellido1.text = rstResultado!APELLIDO1
      txtApellido2.Text = rstResultado!APELLIDO2
      cmbRol.Index = cmbRol.Tag.Find(rstResultado!ID_ROL)
      sEs_Baja = rstResultado!ES_BAJA
      rstResultado.MoveNext
    Loop



    If sEs_Baja = "-" Then
      'Activamos el botón de Borrar
      btnBorrar.Enabled = True
      btnActivar.Enabled = False
      btnDuplicar.Enabled = True
    Else
      btnBorrar.Enabled = False
      btnActivar.Enabled = True
      btnDuplicar.Enabled = False
    End If
  End If


  btnAceptar.Visible = True
  btnCancelar.Visible = True


End

Public Sub btnBorrar_Click()
  'Pulsamos el boton de borrar y marcamos la variable local para borrar

  sAccion = "del"
  btnAceptar.visible = True
  btnCancelar.Visible = True

End

Public Sub btnActivar_Click()
  'Activamos un usuario que esté de baja

  cUsuarios.ActivarUsuario(gEstructuras.getIdSeleccion())
  'Cargamos nuevamente el Grid con los valores
  CargarGrid()
  ' Borramos los datos de los textboxes
  btnLimpiar_Click()
  ' Inactivamos botones
  btnActivar.Enabled = False
  btnBorrar.Enabled = False

End

Public Sub btnDuplicar_Click()
  ' Duplicamos el item seleccionado

  sAccion = "edit"
  'Asignamos nuevo código para el ducplicado
  txtCodigo.Text = gUtils.GetCodigo("USU")

  ' Creamos el registro nuevo
  cUsuarios.AddUsuario(txtCodigo.Text)

  ' Completamos los datos según el item seleccionado
  rstResultado = cUsuarios.GetSelectedUser(gEstructuras.getIdSeleccion())

  rstResultado.MoveFirst

  Do While rstResultado.Available
    txtNombre.Text = rstResultado!NOMBRE & " [Duplicado]"
    txtPass.Text = rstResultado!PASSWORD
    txtApellido1.text = rstResultado!APELLIDO1 & " [Duplicado]"
    txtApellido2.Text = rstResultado!APELLIDO2 & " [Duplicado]"
    cmbRol.Index = cmbRol.Tag.Find(rstResultado!ID_ROL)
    sEs_Baja = rstResultado!ES_BAJA
    rstResultado.MoveNext
  Loop


  'Hacemos visible la imagen de duplicado
  picDuplicado.Visible = True
  ' Mostramos el botón de aceptar y cancelar
  btnAceptar.visible = True
  btnCancelar.Visible = True


End

Public Sub btnCancelar_Click()
  ' Deseccionamos el item marcado en el GridView

  grvUsuarios.UnSelectAll()
  ' Reiniciamos el identificador del item seleccionado
  gEstructuras.setIdSeleccion(0)

  Reiniciar()

End


Public Function ComprobarPass(pass1 As String, pass2 As String) As Boolean

  Dim resultado As Boolean = False

  If pass1 = pass2 Then
    resultado = True

  Endif

  Return resultado

End

Public Function ContieneDuplicado() As Boolean

  Dim resultado As Boolean = False

  If InStr(txtNombre.Text, "[Duplicado]") > 0 Or InStr(txtApellido1.Text, "[Duplicado]") > 0 Or InStr(txtApellido2.Text, "[Duplicado]") > 0 Then

    Message.Error("Los datos contienen la palabra [Duplicado]")
    resultado = True

  End If

  Return resultado

End

Public Sub Reiniciar()

  btnAceptar.Visible = False
  btnCancelar.visible = False
  btnAdd.Enabled = True
  btnBorrar.enabled = False
  btnLimpiar.Enabled = False
  btnActivar.enabled = False
  btnDuplicar.Enabled = False

  btnLimpiar_Click()

End
