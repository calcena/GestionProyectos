' Gambas class file

Private rstResultado As Result
' variables seleccion del Cliente :::::::::::::::::::::::::::::::::::::
Private iSelectCli As Integer = 0
' variables seleccion del Proyecto ::::::::::::::::::::::::::::::::::::
Private iSelectPro As Integer = 0
' variables para filtro Clientes ::::::::::::::::::::::::::::::::::::::
Private sFiltroCli As String = "%"
Private sEstadoCli As String = "%"
' variables para filtro Proyecto ::::::::::::::::::::::::::::::::::::::
Private sFiltroPro As String = "%"
Private sBajaPro As String = "%"
Private sCerradoPro As String = "%"
Private sIdProyecto As String = "%"
'Acción que se realiza en el formulario
Private sAccion As String = Null

Public Sub Form_Open()

  Me.Title = "Clientes  "
  swbEstado.value = "T"

  CargarGrid()

  FiltroProyectos()
  ' Carga inicial de los items del comboBox de Estados de un proyecto
  CargarEstadosProyectos()

End

Public Sub ObtenerProyectosId(iSelect As Integer)

  rstResultado = cProyectos.FiltrarProyectosId(iSelectCli)
  rstResultado.MoveFirst
  lsvProyectos.Clear
  Do While rstResultado.Available
    ' Proyecto Cerrado |Cliente Alta
    If rstResultado!P_CERRADO = "+" And rstResultado!C_BAJA = "-" Then
      lsvProyectos.Add(rstResultado!ID_PROYECTO, " - " & rstResultado!COD_PROYECTO, gConst.picCerrado)
      ' Proyecto Baja | Cliente Alta
    Else If rstResultado!P_BAJA = "+" And rstResultado!C_BAJA = "-" Then
      lsvProyectos.Add(rstResultado!ID_PROYECTO, " - " & rstResultado!COD_PROYECTO, gConst.picBaja)
      ' Cliente Baja
    Else If rstResultado!C_BAJA = "+" Then
      lsvProyectos.Add(rstResultado!ID_PROYECTO, " - " & rstResultado!COD_PROYECTO, gConst.picWarn)
    Else
      ' Proyecto activo por deferencia
      lsvProyectos.Add(rstResultado!ID_PROYECTO, " - " & rstResultado!COD_PROYECTO, gConst.picActivo)
    Endif

    rstResultado.MoveNext
  Loop

End

' Metodo que carga los datos en un Grid pasados por Referencia
Public Sub CargarGrid()

  rstResultado = cClientes.GetClients(sFiltroCli, sIdProyecto, sEstadoCli)
  ' obtenemos los registro para pintar el grid
  grvClientes = cClientes.GetGrid(grvClientes, rstResultado)
  'Método para traer los items seleccionados en el GridView
  GetRows()

End

' Metodo que se ejecuta al pulsar sobre una celda
Public Sub grvClientes_Click()

  ' Guardamos la variable local de la acción realizada
  sAccion = "edit"

  iSelectCli = CInt(grvClientes[grvClientes.Row, 0].text)
  'Obtenemos los proyectos según el cliente seleccioando
  ObtenerProyectosId(iSelectCli)
  btnLimpiar.Enabled = True

End

Public Sub txtFiltroProyectos_KeyRelease()

  sFiltroPro = txtFiltroProyectos.Text
  FiltroProyectos()

End

Public Sub txtFiltroClientes_KeyRelease()

  sFiltroCli = txtFiltroClientes.Text

  CargarGrid()

End

' Método para contar los registros recuperados
Public Sub GetRows()

  Dim resultado As String

  resultado = CStr(rstResultado.Count)
  lblRegistros.Text = "Registros: " & resultado

End


Public Sub btnAdd_Click()
  ' Informamos la variable global como adición

  sAccion = "add"

  btnLimpiar.Enabled = True

  ' se hacen visible los botones de Aceptar y Cancelar acción
  btnAceptar.Visible = True
  btnCancelar.visible = True
  btnAdd.Enabled = False
  txtCodigo.Text = gUtils.GetCodigo("CLI")

  ' Creamos un nuevo registro
  cClientes.AddCliente(txtCodigo.Text)

End


Public Sub FiltroProyectos()

  rstResultado = cProyectos.FiltrarProyectos(sFiltroPro, sBajaPro, sCerradoPro)
  rstResultado.MoveFirst
  lsvProyectos.Clear
  Do While rstResultado.Available
    ' Proyectos cerrados con clientes Activos
    If rstResultado!P_CERRADO = "+" And rstResultado!C_BAJA = "-" Then
      lsvProyectos.Add(rstResultado!ID_PROYECTO, " - " & rstResultado!COD_PROYECTO, gConst.picCerrado)
      ' Proyectos que están de Baja con el clientes Activo
    Else If rstResultado!P_BAJA = "+" And rstResultado!C_BAJA = "-" Then
      lsvProyectos.Add(rstResultado!ID_PROYECTO, " - " & rstResultado!COD_PROYECTO, gConst.picBaja)
      ' Clientes de Baja
    Else If rstResultado!C_BAJA = "+" Then
      lsvProyectos.Add(rstResultado!ID_PROYECTO, " - " & rstResultado!COD_PROYECTO, gConst.picWarn)
      ' El resto se consideran activos
    Else
      lsvProyectos.Add(rstResultado!ID_PROYECTO, " - " & rstResultado!COD_PROYECTO, gConst.picActivo)
    Endif

    rstResultado.MoveNext
  Loop

End



Public Sub btnSalir2_Click()

  Me.Close()
  MenuPrincipal.Show()

End



Public Sub CargarEstadosProyectos()

  cmbEstadoPro.Tag = New Integer[]
  cmbEstadoPro.Clear
  cmbEstadoPro.Add("Todos")
  cmbEstadoPro.Tag.Add(0)
  cmbEstadoPro.Add("Activos")
  cmbEstadoPro.Tag.Add(1)
  cmbEstadoPro.Add("Cerrados")
  cmbEstadoPro.Tag.Add(2)
  cmbEstadoPro.Add("Baja")
  cmbEstadoPro.Tag.Add(3)

End

Public Sub cmbEstadoPro_Change()

  Select Case cmbEstadoPro.Text
    Case "Todos"
      sCerradoPro = "%"
      sBajaPro = "%"
    Case "Activos"
      sCerradoPro = "-"
      sBajaPro = "-"
    Case "Cerrados"
      sCerradoPro = "+"
      sBajaPro = "%"
    Case "Baja"
      sCerradoPro = "%"
      sBajaPro = "+"
  End Select

  FiltroProyectos()


End

Public Sub swbEstado_Click()

  If swbEstado.value = "T" Then
    sEstadoCli = "-"
  Else
    sEstadoCli = "%"
  Endif
  CargarGrid()

End

Public Sub txtFiltroClientes_GotFocus()

  'Desmarcar el grid de clientes
  grvClientes.UnSelectAll()
  'Desmarcar el listView de proyectos
  lsvProyectos.UnselectAll()
  '
  sFiltroCli = "%"
  sFiltroPro = "%"
  'Se reinicia la variable de estructura para la aplicación
  gEstructuras.setIdProyecto(0)
  sIdProyecto = "%"

  ' Recargamos el gridview
  CargarGrid()



End

Public Sub lsvProyectos_Click()

  'Guardamos el id de proyecto en la estructura
  gEstructuras.setIdProyecto(lsvProyectos.key)

  sIdProyecto = gEstructuras.getIdProyecto()
  'Recargamos el gridView
  CargarGrid()

  btnLimpiar.Enabled = True

End
