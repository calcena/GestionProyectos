' Gambas module file

Private conn As Connection
Private bResultado As Boolean
Private iContador As String
Private rstResultado As Result

Public Function InsCriticLog(iUsuario As Integer, sFecha As String, sHora As String, sPantalla As String, sMensaje As String) As Boolean
  ' Declaramos la variable de salida como FALSE :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  
  bResultado = False
  
  conn = gConexion.ConectarDB()
  
  conn.Exec("INSERT INTO LOGS (ID_USUARIO,FECHA,HORA,PANTALLA,MENSAJE,ESTADO) VALUES (" & idUsuario & ",'" & sFecha & "','" & sHora & "','" & sPantalla & "','" & sMensaje & "','4')")
  ' Filas afectadas por nuestro insert
  rstResultado = conn.Exec("SELECT row_count() AS AFFECTED_ROWS")
  ' Evaluamos el resultado de la insercion
  If rstResultado.Count = 1 Then
    bResultado = True
  Endif
  
  Return bResultado
  
End

Public Function InsWarnLog(iUsuario As Integer, sFecha As String, sHora As String, sPantalla As String, sMensaje As String) As Boolean
  ' Declaramos la variable de salida como FALSE :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  
  bResultado = False
  
  conn = gConexion.ConectarDB()
  
  conn.Exec("INSERT INTO LOGS (ID_USUARIO,FECHA,HORA,PANTALLA,MENSAJE,ESTADO) VALUES (" & idUsuario & ",'" & sFecha & "','" & sHora & "','" & sPantalla & "','" & sMensaje & "','3')")
  ' Filas afectadas por nuestro insert
  rstResultado = conn.Exec("SELECT row_count() AS AFFECTED_ROWS")
  ' Evaluamos el resultado de la insercion
  If rstResultado.Count = 1 Then
    bResultado = True
  Endif
  
  Return bResultado
  
End

Public Function InsKoLog(iUsuario As Integer, sFecha As String, sHora As String, sPantalla As String, sMensaje As String) As Boolean
  ' Declaramos la variable de salida como FALSE :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  
  bResultado = False
  
  conn = gConexion.ConectarDB()
  
  conn.Exec("INSERT INTO LOGS (ID_USUARIO,FECHA,HORA,PANTALLA,MENSAJE,ESTADO) VALUES (" & idUsuario & ",'" & sFecha & "','" & sHora & "','" & sPantalla & "','" & sMensaje & "','2')")
  ' Filas afectadas por nuestro insert
  rstResultado = conn.Exec("SELECT row_count() AS AFFECTED_ROWS")
  ' Evaluamos el resultado de la insercion
  If rstResultado.Count = 1 Then
    bResultado = True
  Endif
  
  Return bResultado
  
End

Public Function InsOkLog(iUsuario As Integer, sFecha As String, sHora As String, sPantalla As String, sMensaje As String) As Boolean
  ' Declaramos la variable de salida como FALSE :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  
  bResultado = False
  
  conn = gConexion.ConectarDB()
  
  conn.Exec("INSERT INTO LOGS (ID_USUARIO,FECHA,HORA,PANTALLA,MENSAJE,ESTADO) VALUES (" & idUsuario & ",'" & sFecha & "','" & sHora & "','" & sPantalla & "','" & sMensaje & "','1')")
  ' Filas afectadas por nuestro insert
  rstResultado = conn.Exec("SELECT row_count() AS AFFECTED_ROWS")
  ' Evaluamos el resultado de la insercion
  If rstResultado.Count = 1 Then
    bResultado = True
  Endif
  
  Return bResultado
  
End

Public Function LogsFilter(ByRef gdvLogs As GridView, sFecha As String, sMensaje As String, sEstado As String) As Result
  
  conn = gConexion.ConectarDB()
  rstResultado = conn.Exec("SELECT ID_LOG,FECHA,HORA,PANTALLA,MENSAJE,ESTADO FROM LOGS WHERE (FECHA LIKE '%" & sFecha & "%' OR PANTALLA LIKE '%" & sMensaje & "%' OR MENSAJE LIKE '%" & sMensaje & "%')")
  
  Return rstResultado
  
End

Public Function GetLogs(ByRef objGridView As GridView, rstResultado As Result) As GridView
  
  Dim objResultado As GridView
  Dim i As Integer = 0
  
  objGridView.Columns.Count = rstResultado.Fields.Count - 1
  objGridView.Header = rstResultado.Fields.Count - 1
  
  objGridView.Columns[0].width = 0
  objGridView.Columns[0].Resizable = False
  objGridView.Columns[1].width = 100
  objGridView.Columns[1].Resizable = False
  objGridView.Columns[2].width = 425
  objGridView.Columns[2].Resizable = False
  objGridView.Columns[3].width = 25
  objGridView.Columns[3].Resizable = False
  objGridView.Columns[4].width = 25
  objGridView.Columns[4].Resizable = False
  objGridView.Columns[5].width = 25
  objGridView.Columns[5].Resizable = False 
  ':::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  
  rstResultado.MoveFirst
  
  Do While rstResultado.Available
    objGridView.Rows.Insert(i, 1)
    objGridView[i, 0].Text = rstResultado!ID_LOG
    objGridView[i, 1].Text = rstResultado!FECHA
    objGridView[i, 2].Text = rstResultado!HORA
    objGridView[i, 3].Text = rstResultado!PANTALLA
    objGridView[i, 4].Text = rstResultado!MENSAJE
    objGridView[i, 5].Text = rstResultado!ESTADO     
    i += 1
    rstResultado.MoveNext
  Loop
  
  Return objResultado
  
End
